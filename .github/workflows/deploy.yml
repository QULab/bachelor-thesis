name: Deploy

on: push
  tags:
    - release* # push event with tags start by release

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: |
          npm install
          npm test
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    env:
      SERVER: text-stat.qu.tu-berlin.de
      USER: adminuser
      STUDY_IS_OPEN: 'true'

    steps:
      - name: Copy website
        uses: appleboy/scp-action@edc8ec9
        with:
          host: ${{ env.SERVER }}
          username: ${{ env.USER }}
          key: ${{ secrets.PRIVATE_SSH_KEY  }}
          source: website/*
          target: website
          strip_components: 2
      - name: image_frontned
          if: ${{ env.STUDY_IS_OPEN }}
          uses: fifsky/ssh-action@1f1f1ea
          with:
            command: |
              cd website/frontend
              docker build -t stc_frontend .
            host: ${{ env.SERVER }}
            user: ${{ env.USER }}
            key: ${{ secrets.PRIVATE_SSH_KEY }}
    - name: image_backend
        if: ${{ env.STUDY_IS_OPEN }}
        uses: fifsky/ssh-action@1f1f1ea
        with:
          command: |
            cd website/backend
            docker build -t stc_backend .
          host: ${{ env.SERVER }}
          user: ${{ env.USER }}
          key: ${{ secrets.PRIVATE_SSH_KEY }}
      - name: Deploy
        uses: fifsky/ssh-action@1f1f1ea
        with:
          command: |
            cd website/production
            echo "COUCHDB_PASSWORD=${{ secrets.COUCHDB_PASSWORD }}" > .env
            docker-compose up --build -d
            crontab ./cronfile
          host: ${{ env.SERVER }}
          user: ${{ env.USER }}
          key: ${{ secrets.PRIVATE_SSH_KEY }}
